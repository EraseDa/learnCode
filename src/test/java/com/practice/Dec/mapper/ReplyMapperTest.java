package com.practice.Dec.mapper;import com.practice.Dec.domain.Criteria;import com.practice.Dec.domain.ReplyVO;import lombok.Setter;import lombok.extern.log4j.Log4j2;import org.junit.jupiter.api.Test;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.test.context.SpringBootTest;import java.util.List;import java.util.stream.IntStream;import static org.junit.jupiter.api.Assertions.*;@SpringBootTest@Log4j2class ReplyMapperTest {    @Setter(onMethod_ = @Autowired)    private ReplyMapper mapper;    //17.2.2 ReplyMapper 클래스와 xml처리 : ReplyMapper테스트    @Test    public void testMapper(){        log.info(mapper);    }    //17.2.3 CRUD작업 : 등록    private Long[] bnoArr= { 224L, 225L, 226L, 227L, 228L};    @Test    public void testCreate(){        IntStream.rangeClosed(1,10).forEach(i -> {            ReplyVO vo = new ReplyVO();            //게시물의 번호            vo.setBno(bnoArr[i%5]); //1%5=5 , 2%5=1, 3%5=2, 4%5=1, 5%5=0... 이렇게 나오는게 맞나..?            vo.setReply("[ Reply Create Test ] : " + i);            vo.setReplyer("[ replyer ] : " + i);            mapper.insert(vo);            System.out.println("[ 결과가 나올까? ] : "+vo);        });    }    //17.2.3 CRUD작업 : 조회    @Test    public void testRead(){        Long targetRno = 5L;        ReplyVO vo = mapper.read(targetRno);        log.info(vo);    }    //17.2.3 CRUD작업 : 삭제    @Test    public void testDelete(){        Long targetRno = 2L;        mapper.delete(targetRno);    }    //17.2.3 CRUD작업 : 수정    @Test    public void testUpdate(){        //원하는 댓글번호를 불러서(read) 댓글 내용을 바꿔주고(setReply)        Long targetRno = 5L;        ReplyVO vo = mapper.read(targetRno);        vo.setReply("[ Reply Update ]");        //수정 진행        mapper.update(vo);        //업데이트후에 수정 되었는지 출력해보기        log.info("[ 수정확인 ] : " + mapper.read(targetRno));    }    //17.2.4 @Param 어노테이션과 댓글 목록    @Test    public void testList(){        Criteria cri = new Criteria();        //bnoArr[0] : 224L        List<ReplyVO> replies = mapper.getListWithPaging(cri, bnoArr[0]);        replies.forEach(reply -> log.info(reply));        log.info("[ crt 값은 뭐가나오지? ] + " + cri); // 기본값으로 지정해둔 1,10이 나오는구나..지정했었구나..    }    @Test    public void testList2(){        Criteria cri = new Criteria();        //bnoArr[0] : 224L        List<ReplyVO> replies = mapper.getListWithPaging(cri, 224L);        replies.forEach(reply -> log.info(reply));        log.info("[ crt 값은 뭐가나오지? ] + " + cri); // 기본값으로 지정해둔 1,10이 나오는구나..지정했었구나..    }}