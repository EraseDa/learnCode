<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    "https://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.practice.Dec.mapper.BoardMapper"> <!--어떤 인터페이스에 매핑할건지 경로지정-->    <!-- 8.1.2 Mapper 인터페이스와 Mapper XML -->    <select id="getList" resultType="BoardVO"> <!-- type-aliases설정을 해뒀기때문에 사용할 클래스만 명시해주면 됨 -->        <!--            Mapper에 SQL작성시 주의사항            (1) sql문 마지막 세미콜론(;) 제거하기 제발            (2) 등호 표시가 필요할땐 CDATA로 감싸주기 : <![CDATA[ ]]>                등호 표시에만 적는게 복잡해보인다면 sql문 전체를 감싸도 OK            (3) 입력받을 변수는 #{} 로 작성            (4) SQL에선 대소문자 구분을 안 하지만, 변수명 등은 구분해줘야함!!!        -->        select *        from jw_tbl_board        where bno <![CDATA[ > ]]> 0    </select>    <!-- 8.2.1 create(insert)처리 -->    <!-- public void insert(BoardVO board); : 단순히 시퀀스의 다음값을 구해서 insert할때 사용-->    <insert id="insert">        INSERT INTO jw_tbl_board(bno, title, content, writer)        VALUES (jw_seq_board.nextval, #{title}, #{content}, #{writer})    </insert>    <!-- public void insertSelectKey(BoardVO board); -->    <insert id="insertSelectKey">        <selectKey keyProperty="bno" order="BEFORE" resultType="long">            SELECT jw_seq_board.nextval FROM DUAL        </selectKey>        <!-- selectKey를 이용해 bno를 먼저 생성하고 생성된 bno를 아래 sql애서 활용하는 방식 -->        INSERT INTO jw_tbl_board(bno, title, content, writer)        VALUES (#{bno}, #{title}, #{content}, #{writer})    </insert>    <!-- 8.2.2 read(select)처리 -->    <!--public BoardVO read(Long bno);-->    <select id="read" resultType="BoardVO">        select *        from jw_tbl_board        where bno = #{bno}    </select>    <!-- 8.2.3 delete처리 -->    <!-- public int delete(Long bno); -->    <delete id="delete">        delete        from jw_tbl_board        where bno = #{bno}    </delete>    <!-- 8.2.4 update처리 -->    <update id="update">        UPDATE jw_TBL_BOARD        SET TITLE = #{title} ,            CONTENT = #{content} ,            WRITER = #{writer} ,            UPDATEDATE = SYSDATE        WHERE bno = #{bno}    </update>        <!-- 13.1 MyBatis처리와 테스트 -->    <!-- public List<BoardVO> getListWithPaging(Criteria cri); -->    <!--15.3 15.3 검색조건 처리를위한 Criteria -->    <!-- sql태그로 sql의 일부를 별도로 보관하고, 필요한 경우 include시켜 사용하기 -->    <sql id="criteria">        <trim prefix="(" suffix=")and" prefixOverrides="or">            <foreach item="type" collection="typeArr">                <trim prefix="or">                    <choose>                        <when test="type=='T'.toString()">                            title like '%'||#{keyword}||'%'                        </when>                        <when test="type=='C'.toString()">                            content like '%'||#{keyword}||'%'                        </when>                        <when test="type=='W'.toString()">                            writer like '%'||#{keyword}||'%'                        </when>                    </choose>                </trim>            </foreach>        </trim>    </sql>    <select id="getListWithPaging" resultType="BoardVO">        <![CDATA[        SELECT            bno, title, content, writer, regdate, updatedate, replycnt        FROM(            SELECT /*+ INDEX_DESC(jw_tbl_board jw_pk_board)*/                rownum rn, BNO , TITLE, CONTENT , WRITER , REGDATE , UPDATEDATE, replycnt            FROM jw_TBL_BOARD            WHERE        ]]>        <!-- 아래에 작성해뒀던 동적sql을 sql태그를 사용해 별도로 작성하고, include시켜서 사용할거임 -->        <include refid="criteria"></include>        <![CDATA[            rownum <= #{pageNum} * #{amount}            )        WHERE rn > (#{pageNum}-1) * #{amount}        ]]>    </select>    <!-- 14.6 MyBatis에서 전체 데이터의 개수 처리 -->    <!-- public int getTotalCount(Criteria cri); -->    <select id="getTotalCount" resultType="int">        SELECT count(*)        FROM jw_TBL_BOARD        WHERE        <include refid="criteria"></include>        bno > 0        <!-- 왜 여기에선 CDATA를 안 쓰는거지? -->    </select>    <update id="updateReplyCnt">        update jw_tbl_board set replycnt = replycnt + #{amount}        where bno = #{bno}    </update>    </mapper>