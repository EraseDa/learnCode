package com.practice.Dec.sample;import lombok.Getter;import lombok.extern.log4j.Log4j2;import org.springframework.http.HttpHeaders;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;import org.springframework.web.multipart.MultipartFile;import java.util.ArrayList;@Controller@RequestMapping("/sample/*")@Log4j2public class sampleController {    // 6.5.3 객체타입(146p)    // 리턴타입을 복합데이터가 들어간 객체타입으로 지정하는경우 = JSON 데이터를 만들기위한 용도    // (jackson-databind 라이브러리 안 넣었는데도 json 형태로 잘 출력됨)    @GetMapping("/ex06")    public @ResponseBody sampleDTO ex06(){        log.info("===== /ex06 =====");        sampleDTO dto = new sampleDTO();        dto.setAge(10);        dto.setName("testName");        return dto;    }    //6.5.4 ResponseEntity타입    //브라우저에는 JSON 타입이라는 헤더메시지, 200 OK라는 상태코드 전송    @GetMapping("/ex07")    public ResponseEntity<String> ex07(){        log.info("===== /ex07 =====");        String msg = "{\"name\":\"홍길동\"}";        HttpHeaders header = new HttpHeaders();        header.add("Content-Type", "application/json;charset=utf-8");        return  new ResponseEntity<>(msg,header, HttpStatus.OK);    }    //6.5.5 파일 업로드 처리    @GetMapping("/exUpload")    public void exUpload(){        log.info("===== /ex07 =====");    }    //exUpload.jsp의 action Controller    @PostMapping("/exUploadPost")    public void exUploadPost(ArrayList<MultipartFile> files){        log.info("===== exUploadPost START =====");        files.forEach(file->{            log.info("===== ===== =====");            log.info("name : " + file.getOriginalFilename());            log.info("size : " + file.getSize());        });        log.info("===== exUploadPost END =====");    }}