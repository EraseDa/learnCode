package com.practice.Dec.exception;//@ControllerAdvice어노테이션을 적용하지만, 예외처리를 목적으로 생성하는 클래스이므로 별도의 로직을 처리하지는 않음import lombok.extern.log4j.Log4j2;import org.springframework.http.HttpStatus;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.ControllerAdvice;import org.springframework.web.bind.annotation.ExceptionHandler;import org.springframework.web.bind.annotation.ResponseStatus;import org.springframework.web.servlet.NoHandlerFoundException;//@ControllerAdvice@Log4j2public class CommonExceptionAdvice {    //6.6.1 @ControllerAdvice    @ExceptionHandler(Exception.class)    public String except(Exception ex, Model model){        log.error("Exception Message ====> "+ex.getMessage());        model.addAttribute("exception" + ex);        log.error(model);        return "error_page";    }    //6.6.2 404 에러페이지    @ExceptionHandler(NoHandlerFoundException.class)    @ResponseStatus(HttpStatus.NOT_FOUND)    public String handle404(NoHandlerFoundException ex){        return "custom404";    }}