package com.practice.Dec.service;import com.practice.Dec.domain.Criteria;import com.practice.Dec.domain.ReplyPageDTO;import com.practice.Dec.domain.ReplyVO;import com.practice.Dec.mapper.ReplyMapper;import lombok.Setter;import lombok.extern.log4j.Log4j2;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.List;@Service@Log4j2public class ReplyServiceImpl implements ReplyService{    //17.3 서비스 영역과 Controller 처리    @Setter(onMethod_ = @Autowired) //이런 방식으로 의존성을 주입해주거나 클래스단에 @AllArgsConstructor 를 이용하면 됨    private ReplyMapper mapper;    @Override    public int register(ReplyVO vo) {        log.info("register>>>>>>>>" + vo);        return mapper.insert(vo);    }    @Override    public ReplyVO get(Long rno) {        log.info("get>>>>>>>>" + rno);        return mapper.read(rno);    }    @Override    public int modify(ReplyVO vo) {        log.info("modify>>>>>>>>" + vo);        return mapper.update(vo);    }    @Override    public int remove(Long rno) {        log.info("remove>>>>>>>>" + rno);        return mapper.delete(rno);    }    @Override    public List<ReplyVO> getList(Criteria cri, Long bno) {        log.info("getList>>>>>>>>" + bno);        return mapper.getListWithPaging(cri,bno);    }    //17.6.4 댓글과 댓글 수 처리    @Override    public ReplyPageDTO getListPage(Criteria cri, Long bno){        return new ReplyPageDTO(                mapper.getCountByBno(bno),                mapper.getListWithPaging(cri, bno));    }}