package com.practice.Dec.service;import com.practice.Dec.domain.Criteria;import com.practice.Dec.domain.ReplyPageDTO;import com.practice.Dec.domain.ReplyVO;import com.practice.Dec.mapper.BoardMapper;import com.practice.Dec.mapper.ReplyMapper;import lombok.Setter;import lombok.extern.log4j.Log4j2;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import java.util.List;@Service@Log4j2public class ReplyServiceImpl implements ReplyService{    private ReplyMapper mapper;    private BoardMapper boardMapper;    public ReplyServiceImpl(ReplyMapper mapper, BoardMapper boardMapper) {        this.mapper = mapper;        this.boardMapper = boardMapper;    } //20.1.2를 보면 세터 주입으로 되어있는데 나는 생성자주입으로 바꿈. 왜 빠궜는지 생각해보자    @Transactional    @Override    public int register(ReplyVO vo) {        log.info("register>>>>>>>>" + vo);        boardMapper.updateReplyCnt(vo.getBno(),1);        return mapper.insert(vo);    }    @Override    public ReplyVO get(Long rno) {        log.info("get>>>>>>>>" + rno);        return mapper.read(rno);    }    @Override    public int modify(ReplyVO vo) {        log.info("modify>>>>>>>>" + vo);        return mapper.update(vo);    }    @Transactional    @Override    public int remove(Long rno) {        log.info("remove>>>>>>>>" + rno);        ReplyVO vo = mapper.read(rno);        boardMapper.updateReplyCnt(vo.getBno(),-1);        return mapper.delete(rno);    }    @Override    public List<ReplyVO> getList(Criteria cri, Long bno) {        log.info("getList>>>>>>>>" + bno);        return mapper.getListWithPaging(cri,bno);    }    //17.6.4 댓글과 댓글 수 처리    @Override    public ReplyPageDTO getListPage(Criteria cri, Long bno){        return new ReplyPageDTO(                mapper.getCountByBno(bno),                mapper.getListWithPaging(cri, bno));    }}